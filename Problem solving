First we need to mind the following processes of Problem solving to resolve and complete this project which are:
a) Problem Definition
b) Problem Analysis
c) Establishment of Goal
d) Analyze your Goal
e) Generate Analyze solution
f) Implementation

                                ****Problem Definition****

This project intends to develop a standard secondary school management system that manage both student academic and staffs activities.
It also manage school finance routines which includes tuition fees, staff salary, transportation, clinicals, sports and academic materials.
This project also covers students enrollment which should be of two different varieties namely Fresh and Transfer, it also convers employment of staff and sub-staffs alternatively academic and non-academic staff. These staffs has different roles as their name imply, there are academic staffs whos role solely depends on school academic division, they partially or entirely resides in tutoring activies, managing and maintenance of both students and staff records. Conclusively these staff sub-disivions are named administrative staffs and Academic staffs.
Sub-staffs do not engage in academic activities of the school but play vital role in school management some of their roles includes security suveillance, sport, tranportation, taking care of school garden, cleaning school premises and more. non-academic staff can be a messenger, janitor, gardener, driver or matron.
Next chapter comes with detailed information of all modules mentioned above.



                            ****Problem Analysis****
After thouroughful research of the above problem, we came up with systematic approach on how to deal with it, going through problem definition we realized it must be splitted in severel modules and chunks to clearly analyse to establish our goal.
Module divisions are as followed:
1) STAFF
    ---ADMINISTRATIVE
        -Employment
        -Roles
        -Salary
        -Status
        -Enrollment (Registration)
        -Student Fees
    ---ACADEMIA
        -Department
        -Class
        -Tutor
        -Examination
    ---NON-ACADEMIC
        -Sport
        -Garden
        -Transport
        -Inspection(cleaning)
2)STUDENT
    ---DASHBOARD
       -Login & Logout
       -Complain
       -Record















                        *****DATEBASE*****

    Designing a database for a school management system requires careful planning and consideration of the various entities and relationships involved. Here is a proposed design:

1. Entities:

- Student
- Teacher
- Course
- Department
- Grade
- Attendance
- Parent
- User

2. Relationships:

- A Student is enrolled in a Course.
- A Teacher teaches a Course.
- A Course belongs to a Department.
- A Student receives a Grade for a Course.
- A Student has an Attendance record.
- A Student is associated with a Parent.
- A User can have multiple roles, such as Student, Teacher, Parent, or Administrator.

3. Tables:

- Student (StudentID, FirstName, LastName, DateOfBirth, Gender, Address, PhoneNumber, Email, ParentID, UserID)
- Teacher (TeacherID, FirstName, LastName, DateOfBirth, Gender, Address, PhoneNumber, Email, DepartmentID, UserID)
- Course (CourseID, CourseName, CourseDescription, DepartmentID, TeacherID)
- Department (DepartmentID, DepartmentName)
- Grade (GradeID, StudentID, CourseID, Grade, GradeDate)
- Attendance (AttendanceID, StudentID, CourseID, AttendanceDate, AttendanceStatus)
- Parent (ParentID, FirstName, LastName, DateOfBirth, Gender, Address, PhoneNumber, Email, UserID)
- User (UserID, Username, Password, Role)

4. Constraints:

- Primary keys: StudentID, TeacherID, CourseID, DepartmentID, GradeID, AttendanceID, ParentID, UserID.
- Foreign keys: StudentID in Grade and Attendance, TeacherID in Course, DepartmentID in Course, ParentID in Student, UserID in Student, Teacher, and Parent.
- Unique constraints: Username in User.
- Not null constraints: All attributes in the tables.

Please note that this design is a starting point and can be further refined based







To find out which students are enrolled in a particular course, we can follow these steps:

1. Identify the course for which we want to find the enrolled students. Let's assume we have the CourseID for this course.

2. Join the tables Course, Student, and Grade using the CourseID. This will give us a combined table that includes information about the students enrolled in the course.

3. Extract the StudentIDs from the combined table. These are the IDs of the students enrolled in the course.

4. To get more detailed information about the students, we can join the Student table with the Parent and User tables using the StudentID.

5. Finally, we can retrieve the desired information, such as the student's first name, last name, and email, from the combined table.

Here is an example SQL query that implements this logic:


sql
SELECT 
    Student.StudentID,
    Student.FirstName,
    Student.LastName,
    Parent.Email
FROM 
    Course
JOIN 
    Grade ON Course.CourseID = Grade.CourseID
JOIN 
    Student ON Grade.StudentID = Student.StudentID
JOIN 
    Parent ON Student.ParentID = Parent.ParentID
JOIN 
    User ON Student.UserID = User.UserID
WHERE 
    Course.CourseID = 'your_course_id';
​


Replace 'your_course_id' with the actual CourseID for which you want to find the enrolled students. This query will return a table with the StudentID, first name, last name, and email of the students enrolled in the specified course.


To find out which students are enrolled in a particular course and what is their attendance status, you can follow these steps:

1. Identify the course for which you want to find the enrolled students. Let's assume we have the CourseID for this course.

2. Join the tables Course, Student, Grade, and Attendance using the CourseID. This will give us a combined table that includes information about the students enrolled in the course and their attendance status.

3. Extract the StudentIDs from the combined table. These are the IDs of the students enrolled in the course.

4. To get more detailed information about the students, we can join the Student table with the Parent and User tables using the StudentID.

5. Finally, we can retrieve the desired information, such as the student's first name, last name, and email, from the combined table.

Here is an example SQL query that implements this logic:


sql
SELECT 
    Student.StudentID,
    Student.FirstName,
    Student.LastName,
    Parent.Email,
    Attendance.AttendanceStatus
FROM 
    Course
JOIN 
    Grade ON Course.CourseID = Grade.CourseID
JOIN 
    Student ON Grade.StudentID = Student.StudentID
JOIN 
    Parent ON Student.ParentID = Parent.ParentID
JOIN 
    User ON Student.UserID = User.UserID
JOIN 
    Attendance ON Student.StudentID = Attendance.StudentID
WHERE 
    Course.CourseID = 'your_course_id';
​


Replace 'your_course_id' with the actual CourseID for which you want to find the enrolled students. This query will return a table with the StudentID, first name, last name, email, and attendance status of the students enrolled in the specified course.

Please note that the specific SQL syntax and table names may vary depending on your database schema. You may need to adjust the query accordingly to ensure it works correctly with your database.

To find out which students are enrolled in a particular course and what is their contact information, you can follow these steps:

1. Identify the course for which you want to find the enrolled students. Let's assume we have the CourseID for this course.

2. Join the tables Course, Student, Grade, and Attendance using the CourseID. This will give us a combined table that includes information about the students enrolled in the course and their attendance status.

3. Extract the StudentIDs from the combined table. These are the IDs of the students enrolled in the course.

4. To get more detailed information about the students, we can join the Student table with the Parent and User tables using the StudentID.

5. Finally, we can retrieve the desired information, such as the student's first name, last name, and email, from the combined table.

Here is an example SQL query that implements this logic:


sql
SELECT 
    Student.StudentID,
    Student.FirstName,
    Student.LastName,
    Parent.Email,
    Attendance.AttendanceStatus
FROM 
    Course
JOIN 
    Grade ON Course.CourseID = Grade.CourseID
JOIN 
    Student ON Grade.StudentID = Student.StudentID
JOIN 
    Parent ON Student.ParentID = Parent.ParentID
JOIN 
    User ON Student.UserID = User.UserID
JOIN 
    Attendance ON Student.StudentID = Attendance.StudentID
WHERE 
    Course.CourseID = 'your_course_id';
​


Replace 'your_course_id' with the actual CourseID for which you want to find the enrolled students. This query will return a table with the StudentID, first name, last name, email, and attendance status of the students enrolled in the specified course.

Please note that the specific SQL syntax and table names may vary depending on your database schema. You may need to adjust the query accordingly to ensure it works correctly with your database.

To find out which students are enrolled in a particular course and what is their contact information, you can follow these steps:

1. Identify the course for which you want to find the enrolled students. Let's assume we have the Course.



To get a list of all students enrolled in a particular course, you can use the following query:
Oct 07 3:45 PM
BLACKBOX AI Chat



sql
SELECT 
    Student.StudentID,
    Student.FirstName,
    Student.LastName,
    Parent.Email,
    Attendance.AttendanceStatus
FROM 
    Course
JOIN 
    Grade ON Course.CourseID = Grade.CourseID
JOIN 
    Student ON Grade.StudentID = Student.StudentID
JOIN 
    Parent ON Student.ParentID = Parent.ParentID
JOIN 
    User ON Student.UserID = User.UserID
JOIN 
    Attendance ON Student.StudentID = Attendance.StudentID
WHERE 
    Course.CourseID = 'your_course_id';
​


Replace 'your_course_id' with the actual CourseID for which you want to find the enrolled students. This query will return a table with the StudentID, first name, last name, email, and attendance status of the students enrolled in the specified course.

Please note that the specific SQL syntax and table names may vary depending on your database schema. You may need to adjust the query accordingly to ensure it works correctly with your database.

To find out which students are enrolled in a particular course and what is their contact information, you can follow these steps:

1. Identify the course for which you want to find the enrolled students. Let's assume we have the CourseID for this course.

2. Join the tables Course, Student, Grade, and Attendance using the CourseID. This will give us a combined table that includes information about the students enrolled in the course and their attendance status.

3. Extract the StudentIDs from the combined table. These are the IDs of the students enrolled in the course.

4. To get more detailed information about the students, we can join the Student table with the Parent and User tables using the StudentID.

5. Finally, we can retrieve the desired information, such as the student's first name, last name, and email, from the combined table.

Here is an example SQL query that implements this logic:


sql
SELECT 
    Student.StudentID,
    Student.FirstName,
    Student.LastName,
    Parent.Email,
    Attendance.AttendanceStatus
FROM 
    Course
JOIN 
   